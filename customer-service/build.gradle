
dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('org.springframework.data:spring-data-rest-hal-browser')
	compile('org.springframework.boot:spring-boot-starter-webflux')
	compile('org.springframework.cloud:spring-cloud-starter-config')
	compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
	compile('org.springframework.cloud:spring-cloud-starter-zipkin')

	//necessary for java 9+
	implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
	implementation "org.glassfish.jaxb:jaxb-runtime:2.3.2"

	implementation 'org.springframework.hateoas:spring-hateoas:1.0.2.RELEASE'

	//rxjava
	implementation( "io.reactivex.rxjava2:rxjava:2.1.5")
	//reactor
	implementation("io.projectreactor:reactor-tools:3.3.1.RELEASE")

	//lombok
	annotationProcessor('org.projectlombok:lombok:1.18.10')
	compileOnly('org.projectlombok:lombok')

	//database
	runtime('com.h2database:h2')

	//testing
	testCompile('org.springframework.boot:spring-boot-starter-test')


}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}


docker {
	name "springcloud-sample/${project.name}"
	copySpec.from(zipTree("$buildDir/libs/${project.name}-${version}.jar")).into("dependency")
	buildArgs(['DEPENDENCY': "dependency"])
}


dockerRun {
	name "springcloud-sample-${project.name}-container"
	image "springcloud-sample/${project.name}"
	ports '8001:8001'
	daemonize true
}

bootRun {
	args("--spring.profiles.active=" + project.property("spring.profiles"))
}